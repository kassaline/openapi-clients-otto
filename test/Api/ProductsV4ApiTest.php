<?php
/**
 * ProductsV4ApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Otto
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OTTO Market API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Otto\Test\Api;

use \OpenAPI\Client\Otto\Configuration;
use \OpenAPI\Client\Otto\ApiException;
use \OpenAPI\Client\Otto\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductsV4ApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Otto
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductsV4ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productsV4CreateOrUpdateProductVariations
     *
     * Create or update product variations.
     *
     */
    public function testProductsV4CreateOrUpdateProductVariations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4FailedByProcessId
     *
     * List failed products of a product data delivery.
     *
     */
    public function testProductsV4FailedByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetActiveStatus
     *
     * Read active status.
     *
     */
    public function testProductsV4GetActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetBrands
     *
     * List of allowed brands.
     *
     */
    public function testProductsV4GetBrands()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetCategoryGroups
     *
     * Read product categories.
     *
     */
    public function testProductsV4GetCategoryGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetContentChanges
     *
     * Read content changes for a single product variation.
     *
     */
    public function testProductsV4GetContentChanges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetContentChanges2
     *
     * Read content changes within time period.
     *
     */
    public function testProductsV4GetContentChanges2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetMarketPlaceStatus
     *
     * Read marketplace status for a single product variation.
     *
     */
    public function testProductsV4GetMarketPlaceStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetMarketPlaceStatusList
     *
     * Read marketplace status of product variations.
     *
     */
    public function testProductsV4GetMarketPlaceStatusList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetPartnerProducts
     *
     * Read product variations.
     *
     */
    public function testProductsV4GetPartnerProducts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetProductVariation
     *
     * Read a single product variation.
     *
     */
    public function testProductsV4GetProductVariation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetProductVariationPrice
     *
     * Read a single product variation price.
     *
     */
    public function testProductsV4GetProductVariationPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetProductVariationPrices
     *
     * Read product variations prices.
     *
     */
    public function testProductsV4GetProductVariationPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4GetVariationActiveStatus
     *
     * Read the active status of a single product variation.
     *
     */
    public function testProductsV4GetVariationActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4ProgressByProcessId
     *
     * Request the results of a product data delivery.
     *
     */
    public function testProductsV4ProgressByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4SucceededByProcessId
     *
     * List succeeded products of a product data delivery.
     *
     */
    public function testProductsV4SucceededByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4UnchangedByProcessId
     *
     * List unchanged products of a product data delivery.
     *
     */
    public function testProductsV4UnchangedByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4UpdateActiveStatus
     *
     * Update active status.
     *
     */
    public function testProductsV4UpdateActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV4UpdateProductVariationPrices
     *
     * Update product variation prices.
     *
     */
    public function testProductsV4UpdateProductVariationPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
