<?php
/**
 * ProductsV5ApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Otto
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OTTO Market API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Otto\Test\Api;

use \OpenAPI\Client\Otto\Configuration;
use \OpenAPI\Client\Otto\ApiException;
use \OpenAPI\Client\Otto\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductsV5ApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Otto
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductsV5ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productsV5SandboxOnlyCreateOrUpdateProductVariations
     *
     * Create or update product variations.
     *
     */
    public function testProductsV5SandboxOnlyCreateOrUpdateProductVariations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyFailedByProcessId
     *
     * List failed products of a product data delivery.
     *
     */
    public function testProductsV5SandboxOnlyFailedByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetActiveStatus
     *
     * Read active status.
     *
     */
    public function testProductsV5SandboxOnlyGetActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetBrands
     *
     * List of allowed brands.
     *
     */
    public function testProductsV5SandboxOnlyGetBrands()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetCategoryGroups
     *
     * Read product categories.
     *
     */
    public function testProductsV5SandboxOnlyGetCategoryGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetContentChanges
     *
     * Read content changes for a single product variation.
     *
     */
    public function testProductsV5SandboxOnlyGetContentChanges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetContentChanges2
     *
     * Read content changes within time period.
     *
     */
    public function testProductsV5SandboxOnlyGetContentChanges2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetMarketPlaceStatus
     *
     * Read marketplace status for a single product variation.
     *
     */
    public function testProductsV5SandboxOnlyGetMarketPlaceStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetMarketPlaceStatusList
     *
     * Read marketplace status of product variations.
     *
     */
    public function testProductsV5SandboxOnlyGetMarketPlaceStatusList()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetPartnerProducts
     *
     * Read product variations.
     *
     */
    public function testProductsV5SandboxOnlyGetPartnerProducts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetProductVariation
     *
     * Read a single product variation.
     *
     */
    public function testProductsV5SandboxOnlyGetProductVariation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetProductVariationPrice
     *
     * Read a single product variation price.
     *
     */
    public function testProductsV5SandboxOnlyGetProductVariationPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetProductVariationPrices
     *
     * Read product variations prices.
     *
     */
    public function testProductsV5SandboxOnlyGetProductVariationPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyGetVariationActiveStatus
     *
     * Read the active status of a single product variation.
     *
     */
    public function testProductsV5SandboxOnlyGetVariationActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyProgressByProcessId
     *
     * Request the results of a product data delivery.
     *
     */
    public function testProductsV5SandboxOnlyProgressByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlySucceededByProcessId
     *
     * List succeeded products of a product data delivery.
     *
     */
    public function testProductsV5SandboxOnlySucceededByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyUnchangedByProcessId
     *
     * List unchanged products of a product data delivery.
     *
     */
    public function testProductsV5SandboxOnlyUnchangedByProcessId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyUpdateActiveStatus
     *
     * Update active status.
     *
     */
    public function testProductsV5SandboxOnlyUpdateActiveStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsV5SandboxOnlyUpdateProductVariationPrices
     *
     * Update product variation prices.
     *
     */
    public function testProductsV5SandboxOnlyUpdateProductVariationPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
